Quickstart Guide

workspace : evers_ws

1.	Source 
		cd ../evers_ws
		source devel/setup.bash

2.	Launch openni2
		
		roslaunch openni2_launch openni2.launch

3.	Launch Rqt-reconfigure and check in camera>driver “depth_registration”
		
		rosrun rqt_reconfigure rqt_reconfigure
			camera > driver > cocher « depth_registration »

4.	Launch ORK-tabletop
		
		rosrun object_recognition_core detection -c `rospack find    object_recognition_tabletop`/conf/detection.table.ros.ork

5.	Launch 
		
		roslaunch '/home/astrostudent/evers_ws/launch/evers_ws_recognition.launch'

6.	Launch Rviz and display : filtered_cloud(Pointcloud2) to check what clusters are being processed
         			         DetectedObjectsMarkers(Marker) to see what and where clusters have been detected
		
		rviz

7. 	Empty the database

8.	To train (fill the db with the scene_objects)
		
		2 ways to do training:
		1) rosservice call /object_manager_srv train
		2) rosservice call /train_one_object_srv *label* *category* 

9.	Label the objetcs in db (in info.json)

10.	You can optionally change any param in the launch file situated in the root directory of the project, you ll need to relaunch after any changes

11.	To launch a detection (Don’t forget to source)
		
		4 possibilities:
		1) rostopic pub discrim_status object_discrimination/DetectionInput "{'mode':'detect','label':['all'],'category':['all']}"
		2) rostopic pub discrim_status object_discrimination/DetectionInput "{'mode':'detect','label':['all'],'category':['fruit']}"
		3) rostopic pub discrim_status object_discrimination/DetectionInput "{'mode':'detect','label':['apple'],'category':['all']}"
		4) rostopic pub discrim_status object_discrimination/DetectionInput "{'mode':'detect','label':['apple'],'category':['fruit']}"

12.	If the discrimination node launch is commented in launch file , launch the node with this command line:
		
		source devel/setup.bash
		rosrun object_discrimination Objectdiscrimination 




